
      SUBROUTINE ERRLOG(ID,TEXT)

*
* The internal routine returns the name of the calling
* module.
*
      CHARACTER*(*) TEXT

      write(6,*) TEXT

      return
      end



      SUBROUTINE H1STOP
      stop
      end


      FUNCTION H1RN()
************************************************************************
* Return one random number between 0 and 1 (excl.)                     *
************************************************************************
      DIMENSION X(1)

      y = rndm(0.)
      h1rn = y

      RETURN
      END




*CMZ :  4.09/12 07/05/2000  22.12.43  by  Vladimir Shekelyan
*CMZU:  4.06/05 02/02/96  13.29.42  by  Benno List
*CMZU:  4.05/40 12/10/95  11.23.14  by  Klaus Rabbertz
*CMZU:  4.05/12 13/02/95  15.28.14  by  Benno List
*CMZU:  4.05/00 05/12/94  16.46.26  by  Matthias Korn
*CMZU:  4.04/02 06/10/94  18.01.30  by  Benno List
*CMZ :  4.01/07 23/02/94  18.11.25  by  Stephan Egli
*CMZU:  3.03/14 29/01/93  15.02.50  by  Benno List
*CMZU:  2.05/06 16/10/91  17.05.10  by  Stephan Egli
*-- Author :    Stephan Egli   08/10/91
      FUNCTION PMASS(IPDG)
************************************************************************
*                                                                      *
* A set of functions to get mass,charge,lifetime and width of a        *
* particle defined by its PDG particle code, its name or its           *
* compressed particle code.                                            *
*                                                                      *
* PMASS (IPDG)  :  returns mass     for particle with given PDG code   *
* PCHRG (IPDG)  :  returns charge   for particle with given PDG code   *
* PTLIF (IPDG)  :  returns lifetime for particle with given PDG code   *
* PWIDTH(IPDG)  :  returns width    for particle with given PDG code   *
*                                                                      *
* PMASSN(PANAME):  returns mass     for particle with given name       *
* PCHRGN(PANAME):  returns charge   for particle with given name       *
* PTLIFN(PANAME):  returns lifetime for particle with given name       *
* PWIDTN(PANAME):  returns width    for particle with given name       *
*                                                                      *
* PMASSC(ICOMPR):  returns mass     for particle with given compr. code*
* PCHRGC(ICOMPR):  returns charge   for particle with given compr. code*
* PTLIFC(ICOMPR):  returns lifetime for particle with given compr. code*
* PWIDTC(ICOMPR):  returns width    for particle with given compr. code*
*                                                                      *
* Functions to turn one identifier into another:                       *
*                                                                      *
* JPNAME(IPDG,PANAME): returns flag if IPDG is a known particle code   *
*                      (JPNAME=0 if known, otherwise JPNAME=-1) and    *
*                      the CHARACTER*12 name itself (or 'UNDEFINED')   *
* JPCODE(PANAME):  returns PDG code for particle with given name       *
* JPCPDG(IPDG):   returns compressed code for particle with given IPDG *
* JPCNAM(PANAME): returns compressed code for particle with given name *
*                                                                      *
* Timing on IBM 3090: retrieval by name: 4.2 usec                      *
*                     retrieval by PDG code: 2.4 usec                  *
*                     retrieval by compressed code 1.4 usec            *
* Timing on VAX 6400: (15 usec / 10 usec / 3 usec respectively)        *
*                                                                      *
* Changed by: M. Korn (inspired by A.Fedotov) 05.12.94, Reason:        *
*      Change Eshowino,Hshowino geant codes  49,50 -> 51,52            *
*      with the following consequences for this routine:               *
*      Add  He3      (Helium3++) with igea/ipdg/icompr  = 49/497/452 , *
*      and  Cerenkov (Cerenkov0) with igea/ipdg/icompr  = 50/498/453 . *
*      The old version is kept if flag OLDSHOW selected .              *
*      (Correction of deutron,triton,alpha masses was already          *
*      implemented bei Benno List.)                                    *
* Changed by: B. List 13.2.95 Introduce N(1710), N(1720)               *
* Changed by: B. List  2.2.96 Introduce more mesons                    *
************************************************************************
*     define number of particles in following table:
      PARAMETER (NCOMAX=488)

      DIMENSION IP(NCOMAX),AM(NCOMAX),CH(NCOMAX),TL(NCOMAX),WI(NCOMAX)
      INTEGER AUX(2*NCOMAX),AUX2(2*NCOMAX)
      CHARACTER*12 NA(NCOMAX),NAMOUT
      CHARACTER*(*) PANAME

      LOGICAL FIRST1,FIRST2
      DATA FIRST1,FIRST2/.TRUE.,.TRUE./
      DATA NPRIM /0/

      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=  1, 19)/
     +       1,'d           ',0.9900E-02,-0.33, 0.0000E+00, 0.0000E+00,
     +      -1,'d#          ',0.9900E-02, 0.33, 0.0000E+00, 0.0000E+00,
     +       2,'u           ',0.5600E-02, 0.67, 0.0000E+00, 0.0000E+00,
     +      -2,'u#          ',0.5600E-02,-0.67, 0.0000E+00, 0.0000E+00,
     +       3,'s           ',0.1990E+00,-0.33, 0.0000E+00, 0.0000E+00,
     +      -3,'s#          ',0.1990E+00, 0.33, 0.0000E+00, 0.0000E+00,
     +       4,'c           ',0.1350E+01, 0.67, 0.0000E+00, 0.0000E+00,
     +      -4,'c#          ',0.1350E+01,-0.67, 0.0000E+00, 0.0000E+00,
     +       5,'b           ',0.5000E+01,-0.33, 0.0000E+00, 0.0000E+00,
     +      -5,'b#          ',0.5000E+01, 0.33, 0.0000E+00, 0.0000E+00,
     +       6,'t           ',0.1740E+03, 0.67, 0.0000E+00, 0.0000E+00,
     +      -6,'t#          ',0.1740E+03,-0.67, 0.0000E+00, 0.0000E+00,
     +       7,'l           ',0.1200E+03,-0.33, 0.0000E+00, 0.0000E+00,
     +      -7,'l#          ',0.1200E+03, 0.33, 0.0000E+00, 0.0000E+00,
     +       8,'h           ',0.2000E+03, 0.67, 0.0000E+00, 0.0000E+00,
     +      -8,'h#          ',0.2000E+03,-0.67, 0.0000E+00, 0.0000E+00,
     +      11,'e-          ',0.5110E-03,-1.00, 0.1000E+16, 0.0000E+00,
     +     -11,'e+          ',0.5110E-03, 1.00, 0.1000E+16, 0.0000E+00,
     +      12,'nu_e        ',0.0000E+00, 0.00, 0.1000E+16, 0.0000E+00/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J= 20, 38)/
     +     -12,'nu_e#       ',0.0000E+00, 0.00, 0.1000E+16, 0.0000E+00,
     +      13,'mu-         ',0.1057E+00,-1.00, 0.2197E-05, 0.2996E-18,
     +     -13,'mu+         ',0.1057E+00, 1.00, 0.2197E-05, 0.2996E-18,
     +      14,'nu_mu       ',0.0000E+00, 0.00, 0.1000E+16, 0.0000E+00,
     +     -14,'nu_mu#      ',0.0000E+00, 0.00, 0.1000E+16, 0.0000E+00,
     +      15,'tau-        ',0.1777E+01,-1.00, 0.2900E-12, 0.2270E-11,
     +     -15,'tau+        ',0.1777E+01, 1.00, 0.2900E-12, 0.2270E-11,
     +      16,'nu_tau      ',0.0000E+00, 0.00, 0.1000E+16, 0.0000E+00,
     +     -16,'nu_tau#     ',0.0000E+00, 0.00, 0.1000E+16, 0.0000E+00,
     +      17,'chi-        ',0.6000E+02,-1.00, 0.0000E+00, 0.0000E+00,
     +     -17,'chi+        ',0.6000E+02, 1.00, 0.0000E+00, 0.0000E+00,
     +      18,'nu_chi      ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +     -18,'nu_chi#     ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      21,'g           ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      22,'gamma       ',0.0000E+00, 0.00, 0.1000E+16, 0.0000E+00,
     +      23,'Z0          ',0.9119E+02, 0.00, 0.2643E-24, 0.2490E+01,
     +      24,'W+          ',0.8041E+02, 1.00, 0.3195E-24, 0.2060E+01,
     +     -24,'W-          ',0.8041E+02,-1.00, 0.3195E-24, 0.2060E+01,
     +      25,'H0          ',0.1500E+02, 0.00, 0.0000E+00, 0.0000E+00/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J= 39, 57)/
     +      32,'Z''0         ',0.3000E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +      33,'Z"0         ',0.9000E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +      34,'W''+         ',0.6000E+03, 1.00, 0.0000E+00, 0.0000E+00,
     +     -34,'W''-         ',0.6000E+03,-1.00, 0.0000E+00, 0.0000E+00,
     +      35,'H''0         ',0.3000E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +      36,'H"0         ',0.9000E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +      37,'H+          ',0.3000E+03, 1.00, 0.0000E+00, 0.0000E+00,
     +     -37,'H-          ',0.3000E+03,-1.00, 0.0000E+00, 0.0000E+00,
     +      40,'R0          ',0.5000E+04, 0.00, 0.0000E+00, 0.0000E+00,
     +     -40,'R0#         ',0.5000E+04, 0.00, 0.0000E+00, 0.0000E+00,
     +      81,'specflav    ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      82,'rndmflav    ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +     -82,'rndmflav#   ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      83,'phasespa    ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      89,'Wvirt+      ',0.0000E+00, 1.00, 0.0000E+00, 0.0000E+00,
     +     -89,'Wvirt-      ',0.0000E+00,-1.00, 0.0000E+00, 0.0000E+00,
     +      91,'cluster     ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      92,'string      ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      93,'indep.      ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J= 58, 76)/
     +      94,'CMshower    ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      95,'SPHEaxis    ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      96,'THRUaxis    ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      97,'CLUSjet     ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      98,'CELLjet     ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      99,'table       ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +     111,'pi0         ',0.1350E+00, 0.00, 0.8439E-16, 0.7800E-08,
     +     113,'rho0        ',0.7700E+00, 0.00, 0.4368E-23, 0.1507E+00,
     +     115,'a_20        ',0.1318E+01, 0.00, 0.6152E-23, 0.1070E+00,
     +     130,'K_L0        ',0.4977E+00, 0.00, 0.5171E-07, 0.1273E-16,
     +     210,'pi_diffr+   ',0.0000E+00, 1.00, 0.0000E+00, 0.0000E+00,
     +    -210,'pi_diffr-   ',0.0000E+00,-1.00, 0.0000E+00, 0.0000E+00,
     +     211,'pi+         ',0.1396E+00, 1.00, 0.2603E-07, 0.2528E-16,
     +    -211,'pi-         ',0.1396E+00,-1.00, 0.2603E-07, 0.2528E-16,
     +     213,'rho+        ',0.7700E+00, 1.00, 0.4368E-23, 0.1507E+00,
     +    -213,'rho-        ',0.7700E+00,-1.00, 0.4368E-23, 0.1507E+00,
     +     215,'a_2+        ',0.1318E+01, 1.00, 0.6152E-23, 0.1070E+00,
     +    -215,'a_2-        ',0.1318E+01,-1.00, 0.6152E-23, 0.1070E+00,
     +     221,'eta0        ',0.5473E+00, 0.00, 0.5578E-18, 0.1180E-05/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J= 77, 95)/
     +     223,'omega0      ',0.7819E+00, 0.00, 0.7827E-22, 0.8410E-02,
     +     225,'f_20        ',0.1275E+01, 0.00, 0.3548E-23, 0.1855E+00,
     +     310,'K_S0        ',0.4977E+00, 0.00, 0.8927E-10, 0.7373E-14,
     +     311,'K0          ',0.4977E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +    -311,'K0#         ',0.4977E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +     313,'K*0         ',0.8961E+00, 0.00, 0.1303E-22, 0.5050E-01,
     +    -313,'K*0#        ',0.8961E+00, 0.00, 0.1303E-22, 0.5050E-01,
     +     315,'K*_20       ',0.1432E+01, 0.00, 0.6039E-23, 0.1090E+00,
     +    -315,'K*_20#      ',0.1432E+01, 0.00, 0.6039E-23, 0.1090E+00,
     +     321,'K+          ',0.4937E+00, 1.00, 0.1239E-07, 0.5314E-16,
     +    -321,'K-          ',0.4937E+00,-1.00, 0.1239E-07, 0.5314E-16,
     +     323,'K*+         ',0.8917E+00, 1.00, 0.1296E-22, 0.5080E-01,
     +    -323,'K*-         ',0.8917E+00,-1.00, 0.1296E-22, 0.5080E-01,
     +     325,'K*_2+       ',0.1426E+01, 1.00, 0.6682E-23, 0.9850E-01,
     +    -325,'K*_2-       ',0.1426E+01,-1.00, 0.6682E-23, 0.9850E-01,
     +     331,'eta''0       ',0.9578E+00, 0.00, 0.3242E-20, 0.2030E-03,
     +     333,'phi0        ',0.1019E+01, 0.00, 0.1486E-21, 0.4430E-02,
     +     335,'f''_20       ',0.1525E+01, 0.00, 0.8661E-23, 0.7600E-01,
     +     411,'D+          ',0.1869E+01, 1.00, 0.1057E-11, 0.6230E-12/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J= 96,114)/
     +    -411,'D-          ',0.1869E+01,-1.00, 0.1057E-11, 0.6230E-12,
     +     413,'D*+         ',0.2010E+01, 1.00, 0.0000E+00, 0.1310E-03,
     +    -413,'D*-         ',0.2010E+01,-1.00, 0.0000E+00, 0.1310E-03,
     +     415,'D*_2+       ',0.2459E+01, 1.00, 0.2633E-22, 0.2500E-01,
     +    -415,'D*_2-       ',0.2459E+01,-1.00, 0.2633E-22, 0.2500E-01,
     +     421,'D0          ',0.1865E+01, 0.00, 0.4150E-12, 0.1586E-11,
     +    -421,'D0#         ',0.1865E+01, 0.00, 0.4150E-12, 0.1586E-11,
     +     423,'D*0         ',0.2007E+01, 0.00, 0.0000E+00, 0.2100E-02,
     +    -423,'D*0#        ',0.2007E+01, 0.00, 0.0000E+00, 0.2100E-02,
     +     425,'D*_20       ',0.2459E+01, 0.00, 0.2862E-22, 0.2300E-01,
     +    -425,'D*_20#      ',0.2459E+01, 0.00, 0.2862E-22, 0.2300E-01,
     +     431,'D_s+        ',0.1969E+01, 1.00, 0.4668E-12, 0.1410E-11,
     +    -431,'D_s-        ',0.1969E+01,-1.00, 0.4668E-12, 0.1410E-11,
     +     433,'D*_s+       ',0.2112E+01, 1.00, 0.0000E+00, 0.4500E-02,
     +    -433,'D*_s-       ',0.2112E+01,-1.00, 0.0000E+00, 0.4500E-02,
     +     435,'D*_2s+      ',0.2573E+01, 1.00, 0.4114E-22, 0.1600E+01,
     +    -435,'D*_2s-      ',0.2573E+01, 1.00, 0.4114E-22, 0.1600E+01,
     +     441,'eta_c0      ',0.2980E+01, 0.00, 0.4986E-22, 0.1320E-01,
     +     443,'J/psi0      ',0.3097E+01, 0.00, 0.7566E-20, 0.8700E-04/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=115,133)/
     +     445,'chi_2c0     ',0.3556E+01, 0.00, 0.3291E-21, 0.2000E-02,
     +     491,'Deuteron+   ',0.1876E+01, 1.00, 0.1000E+17, 0.0000E+00,
     +     492,'Tritium+    ',0.2809E+01, 1.00, 0.1000E+17, 0.0000E+00,
     +     493,'Alpha++     ',0.3727E+01, 2.00, 0.1000E+17, 0.0000E+00,
     +     494,'Geantino0   ',0.0000E+00, 0.00, 0.1000E+17, 0.0000E+00,
     +     495,'Eshowino0   ',0.0000E+00, 0.00, 0.1000E+17, 0.0000E+00,
     +     496,'Hshowino0   ',0.0000E+00, 0.00, 0.1000E+17, 0.0000E+00,
     +     511,'B0          ',0.5279E+01, 0.00, 0.1560E-11, 0.4220E-12,
     +    -511,'B0#         ',0.5279E+01, 0.00, 0.1560E-11, 0.4220E-12,
     +     513,'B*0         ',0.5325E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +    -513,'B*0#        ',0.5325E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +     515,'B*_20       ',0.5830E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +    -515,'B*_20#      ',0.5830E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +     521,'B+          ',0.5279E+01, 1.00, 0.1650E-11, 0.3990E-12,
     +    -521,'B-          ',0.5279E+01,-1.00, 0.1650E-11, 0.3990E-12,
     +     523,'B*+         ',0.5325E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +    -523,'B*-         ',0.5325E+01,-1.00, 0.0000E+00, 0.0000E+00,
     +     525,'B*_2+       ',0.5830E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +    -525,'B*_2-       ',0.5830E+01,-1.00, 0.0000E+00, 0.0000E+00/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=134,152)/
     +     531,'B_s0        ',0.5369E+01, 0.00, 0.1541E-11, 0.4270E-12,
     +    -531,'B_s0#       ',0.5369E+01, 0.00, 0.1541E-11, 0.4270E-12,
     +     533,'B*_s0       ',0.5422E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +    -533,'B*_s0#      ',0.5422E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +     535,'B*_2s0      ',0.6070E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +    -535,'B*_2s0#     ',0.6070E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   10551,'chi_0b0     ',0.9860E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +     553,'Upsilon0    ',0.9460E+01, 0.00, 0.1254E-19, 0.5250E-04,
     +     555,'chi_2b0     ',0.9913E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +     661,'eta_t0      ',0.3480E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +     663,'Theta0      ',0.3480E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +     665,'chi_2t0     ',0.3480E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +     771,'eta_l0      ',0.2380E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +     773,'Theta_l0    ',0.2380E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +     775,'chi_2l0     ',0.2384E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +     881,'eta_h0      ',0.3970E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +     883,'Theta_h0    ',0.3970E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +     885,'chi_2h0     ',0.3975E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +    1114,'Delta-      ',0.1232E+01,-1.00, 0.5485E-23, 0.1200E+00/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=153,171)/
     +   -1114,'Delta+#     ',0.1232E+01, 1.00, 0.5485E-23, 0.1200E+00,
     +    2110,'n_diffr0    ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +   -2110,'n_diffr0#   ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +    2112,'n0          ',0.9396E+00, 0.00, 0.8866E+03, 0.7424E-27,
     +   -2112,'n0#         ',0.9396E+00, 0.00, 0.8866E+03, 0.7424E-27,
     +    2114,'Delta0      ',0.1232E+01, 0.00, 0.5485E-23, 0.1200E+00,
     +   -2114,'Delta0#     ',0.1232E+01, 0.00, 0.5485E-23, 0.1200E+00,
     +    2210,'p_diffr+    ',0.0000E+00, 1.00, 0.0000E+00, 0.0000E+00,
     +   -2210,'p_diffr-#   ',0.0000E+00,-1.00, 0.0000E+00, 0.0000E+00,
     +    2212,'p+          ',0.9383E+00, 1.00, 0.1000E+16, 0.0000E+00,
     +   -2212,'p-#         ',0.9383E+00,-1.00, 0.1000E+16, 0.0000E+00,
     +    2214,'Delta+      ',0.1232E+01, 1.00, 0.5485E-23, 0.1200E+00,
     +   -2214,'Delta-#     ',0.1232E+01,-1.00, 0.5485E-23, 0.1200E+00,
     +    2224,'Delta++     ',0.1232E+01, 2.00, 0.5485E-23, 0.1200E+00,
     +   -2224,'Delta--#    ',0.1232E+01, 2.00, 0.5485E-23, 0.1200E+00,
     +    3112,'Sigma-      ',0.1197E+01,-1.00, 0.1479E-09, 0.4450E-14,
     +   -3112,'Sigma+#     ',0.1197E+01, 1.00, 0.1479E-09, 0.4450E-14,
     +    3114,'Sigma*-     ',0.1387E+01,-1.00, 0.1671E-22, 0.3940E-01,
     +   -3114,'Sigma*+#    ',0.1387E+01,-1.00, 0.1671E-22, 0.3940E-01/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=172,190)/
     +    3122,'Lambda0     ',0.1116E+01, 0.00, 0.2632E-09, 0.2501E-14,
     +   -3122,'Lambda0#    ',0.1116E+01, 0.00, 0.2632E-09, 0.2501E-14,
     +    3212,'Sigma0      ',0.1193E+01, 0.00, 0.7396E-19, 0.8900E-05,
     +   -3212,'Sigma0#     ',0.1193E+01, 0.00, 0.7396E-19, 0.8900E-05,
     +    3214,'Sigma*0     ',0.1384E+01, 0.00, 0.1828E-22, 0.3600E-01,
     +   -3214,'Sigma*0#    ',0.1384E+01, 0.00, 0.1828E-22, 0.3600E-01,
     +    3222,'Sigma+      ',0.1189E+01, 1.00, 0.7988E-10, 0.8240E-14,
     +   -3222,'Sigma-#     ',0.1189E+01,-1.00, 0.7988E-10, 0.8240E-14,
     +    3224,'Sigma*+     ',0.1383E+01, 1.00, 0.1839E-22, 0.3580E-01,
     +   -3224,'Sigma*-#    ',0.1383E+01,-1.00, 0.1839E-22, 0.3580E-01,
     +    3312,'Xi-         ',0.1321E+01,-1.00, 0.1637E-09, 0.4020E-14,
     +   -3312,'Xi+#        ',0.1321E+01, 1.00, 0.1637E-09, 0.4020E-14,
     +    3314,'Xi*-        ',0.1535E+01,-1.00, 0.6649E-22, 0.9900E-02,
     +   -3314,'Xi*+#       ',0.1535E+01,-1.00, 0.6649E-22, 0.9900E-02,
     +    3322,'Xi0         ',0.1315E+01, 0.00, 0.2900E-09, 0.2270E-14,
     +   -3322,'Xi0#        ',0.1315E+01, 0.00, 0.2900E-09, 0.2270E-14,
     +    3324,'Xi*0        ',0.1532E+01, 0.00, 0.7233E-22, 0.9100E-02,
     +   -3324,'Xi*0#       ',0.1532E+01, 0.00, 0.7233E-22, 0.9100E-02,
     +    3334,'Omega-      ',0.1672E+01,-1.00, 0.8217E-10, 0.8010E-14/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=191,209)/
     +   -3334,'Omega+#     ',0.1672E+01, 1.00, 0.8217E-10, 0.8010E-14,
     +    4112,'Sigma_c0    ',0.2452E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   -4112,'Sigma_c0#   ',0.2452E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +    4114,'Sigma*_c0   ',0.2500E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   -4114,'Sigma*_c0#  ',0.2500E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +    4122,'Lambda_c+   ',0.2285E+01, 1.00, 0.2063E-12, 0.3190E-11,
     +   -4122,'Lambda_c-#  ',0.2285E+01,-1.00, 0.2063E-12, 0.3190E-11,
     +    4132,'Xi''_c0      ',0.2550E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   -4132,'Xi''_c0#     ',0.2550E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +    4212,'Sigma_c+    ',0.2454E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +   -4212,'Sigma_c-#   ',0.2454E+01,-1.00, 0.0000E+00, 0.0000E+00,
     +    4214,'Sigma*_c+   ',0.2500E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +   -4214,'Sigma*_c-#  ',0.2500E+01,-1.00, 0.0000E+00, 0.0000E+00,
     +    4222,'Sigma_c++   ',0.2453E+01, 2.00, 0.0000E+00, 0.0000E+00,
     +   -4222,'Sigma_c--#  ',0.2453E+01,-2.00, 0.0000E+00, 0.0000E+00,
     +    4224,'Sigma*_c++  ',0.2500E+01, 2.00, 0.0000E+00, 0.0000E+00,
     +   -4224,'Sigma*_c--# ',0.2500E+01,-2.00, 0.0000E+00, 0.0000E+00,
     +    4232,'Xi''_c+      ',0.2550E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +   -4232,'Xi''_c-#     ',0.2550E+01,-1.00, 0.0000E+00, 0.0000E+00/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=210,228)/
     +    4132,'Xi_c0       ',0.2470E+01, 0.00, 0.9824E-13, 0.6700E-11,
     +   -4132,'Xi_c0#      ',0.2470E+01, 0.00, 0.9824E-13, 0.6700E-11,
     +    4314,'Xi*_c0      ',0.2630E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   -4314,'Xi*_c0#     ',0.2630E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +    4232,'Xi_c+       ',0.2466E+01, 1.00, 0.3539E-12, 0.1860E-11,
     +   -4232,'Xi_c-#      ',0.2466E+01,-1.00, 0.3539E-12, 0.1860E-11,
     +    4324,'Xi*_c+      ',0.2630E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +   -4324,'Xi*_c-#     ',0.2630E+01,-1.00, 0.0000E+00, 0.0000E+00,
     +    4332,'Omega_c0    ',0.2704E+01, 0.00, 0.6453E-13, 0.1020E-10,
     +   -4332,'Omega_c0#   ',0.2704E+01, 0.00, 0.6453E-13, 0.1020E-10,
     +    4334,'Omega*_c0   ',0.2800E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   -4334,'Omega*_c0#  ',0.2800E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +    5112,'Sigma_b-    ',0.5800E+01,-1.00, 0.0000E+00, 0.0000E+00,
     +   -5112,'Sigma_b+#   ',0.5800E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +    5114,'Sigma*_b-   ',0.5810E+01,-1.00, 0.0000E+00, 0.0000E+00,
     +   -5114,'Sigma*_b+#  ',0.5810E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +    5122,'Lambda_b0   ',0.5624E+01, 0.00, 0.1240E-11, 0.5310E-12,
     +   -5122,'Lambda_b0#  ',0.5624E+01, 0.00, 0.1240E-11, 0.5310E-12,
     +    5132,'Xi''_b-      ',0.5840E+01,-1.00, 0.0000E+00, 0.0000E+00/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=229,247)/
     +   -5132,'Xi''_b+#     ',0.5840E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +    5212,'Sigma_b0    ',0.5800E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   -5212,'Sigma_b0#   ',0.5800E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +    5214,'Sigma*_b0   ',0.5810E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   -5214,'Sigma*_b0#  ',0.5810E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +    5222,'Sigma_b+    ',0.5800E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +   -5222,'Sigma_b-#   ',0.5800E+01,-1.00, 0.0000E+00, 0.0000E+00,
     +    5224,'Sigma*_b+   ',0.5810E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +   -5224,'Sigma*_b-#  ',0.5810E+01,-1.00, 0.0000E+00, 0.0000E+00,
     +    5232,'Xi''_b0      ',0.5840E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   -5232,'Xi''_b0#     ',0.5840E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +    5312,'Xi_b-       ',0.5960E+01,-1.00, 0.0000E+00, 0.0000E+00,
     +   -5312,'Xi_b+#      ',0.5960E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +    5314,'Xi*_b-      ',0.5970E+01,-1.00, 0.0000E+00, 0.0000E+00,
     +   -5314,'Xi*_b+#     ',0.5970E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +    5322,'Xi_b0       ',0.5960E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   -5322,'Xi_b0#      ',0.5960E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +    5324,'Xi*_b0      ',0.5970E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   -5324,'Xi*_b0#     ',0.5970E+01, 0.00, 0.0000E+00, 0.0000E+00/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=248,266)/
     +    5332,'Omega_b-    ',0.6120E+01,-1.00, 0.1309E-11, 0.5029E-12,
     +   -5332,'Omega_b+#   ',0.6120E+01, 1.00, 0.1309E-11, 0.5029E-12,
     +    5334,'Omega*_b-   ',0.6130E+01,-1.00, 0.0000E+00, 0.0000E+00,
     +   -5334,'Omega*_b+#  ',0.6130E+01, 1.00, 0.0000E+00, 0.0000E+00,
     + 9000111,'a_00        ',0.9834E+00, 0.00, 0.0000E+00, 0.6000E-01,
     +   10113,'b_10        ',0.1230E+01, 0.00, 0.4635E-23, 0.1420E+00,
     + 9000211,'a_0+        ',0.9834E+00, 1.00, 0.0000E+00, 0.6000E-01,
     +-9000211,'a_0-        ',0.9834E+00,-1.00, 0.0000E+00, 0.6000E-01,
     +   10213,'b_1+        ',0.1230E+01, 1.00, 0.4635E-23, 0.1420E+00,
     +  -10213,'b_1-        ',0.1230E+01,-1.00, 0.4635E-23, 0.1420E+00,
     + 9010221,'f_00        ',0.9800E+00, 0.00, 0.0000E+00, 0.5000E-01,
     +   10223,'h_10        ',0.1170E+01, 0.00, 0.1828E-23, 0.3600E+00,
     +   10311,'K*_00       ',0.1429E+01, 0.00, 0.2293E-23, 0.2870E+00,
     +  -10311,'K*_00#      ',0.1429E+01, 0.00, 0.2293E-23, 0.2870E+00,
     +   10313,'K_10        ',0.1272E+01, 0.00, 0.7313E-23, 0.9000E-01,
     +  -10313,'K_10#       ',0.1272E+01, 0.00, 0.7313E-23, 0.9000E-01,
     +   10321,'K*_0+       ',0.1429E+01, 1.00, 0.2293E-23, 0.2870E+00,
     +  -10321,'K*_0-       ',0.1429E+01,-1.00, 0.2293E-23, 0.2870E+00,
     +   10323,'K_1+        ',0.1272E+01, 1.00, 0.7313E-23, 0.9000E-01/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=267,285)/
     +  -10323,'K_1-        ',0.1272E+01,-1.00, 0.7313E-23, 0.9000E-01,
     +   10331,'f''_00       ',0.1400E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +  100333,'phi(1680)0  ',0.1680E+01, 0.00, 0.4388E-23, 0.1500E+00,
     +   10411,'D*_0+       ',0.2272E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +  -10411,'D*_0-       ',0.2272E+01,-1.00, 0.0000E+00, 0.0000E+00,
     +   10413,'D_1+        ',0.2322E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +  -10413,'D_1-        ',0.2322E+01,-1.00, 0.0000E+00, 0.0000E+00,
     +   10421,'D*_00       ',0.2272E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +  -10421,'D*_00#      ',0.2272E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   10423,'D_10        ',0.2422E+01, 0.00, 0.3483E-22, 0.1890E-01,
     +  -10423,'D_10#       ',0.2422E+01, 0.00, 0.3483E-22, 0.1890E-01,
     +   10431,'D*_0s+      ',0.2460E+01, 1.00, 0.1463E-21, 0.4500E-02,
     +  -10431,'D*_0s-      ',0.2460E+01, 1.00, 0.1463E-21, 0.4500E-02,
     +   10433,'D_1s+       ',0.2535E+01, 1.00, 0.0000E+00, 0.2300E-02,
     +  -10433,'D_1s-       ',0.2535E+01, 1.00, 0.0000E+00, 0.2300E-02,
     +   10441,'chi_0c0     ',0.3417E+01, 0.00, 0.4702E-22, 0.1400E-01,
     +   20443,'chi_1c0     ',0.3511E+01, 0.00, 0.7480E-21, 0.8800E-03,
     +   10511,'B*_00       ',0.5680E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +  -10511,'B*_00#      ',0.5680E+01, 0.00, 0.0000E+00, 0.0000E+00/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=286,304)/
     +   10513,'B_10        ',0.5730E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +  -10513,'B_10#       ',0.5730E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   10521,'B*_0+       ',0.5680E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +  -10521,'B*_0-       ',0.5680E+01,-1.00, 0.0000E+00, 0.0000E+00,
     +   10523,'B_1+        ',0.5730E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +  -10523,'B_1-        ',0.5730E+01,-1.00, 0.0000E+00, 0.0000E+00,
     +   10531,'B*_0s0      ',0.5920E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +  -10531,'B*_0s0#     ',0.5920E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   10533,'B_1s0       ',0.5970E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +  -10533,'B_1s0#      ',0.5970E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +  110551,'chi_0b(2P)0 ',0.1023E+02, 0.00, 0.0000E+00, 0.0000E+00,
     +   20553,'chi_1b0     ',0.9892E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   10661,'chi_0t0     ',0.3480E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +   10663,'h_1t0       ',0.3480E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +   10771,'chi_0l0     ',0.2384E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +   10773,'h_1l0       ',0.2384E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +   10881,'chi_0h0     ',0.3974E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +   10883,'h_1h0       ',0.3974E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +   20113,'a_10        ',0.1230E+01, 0.00, 0.0000E+00, 0.4000E+00/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=305,323)/
     +   20213,'a_1+        ',0.1230E+01, 1.00, 0.0000E+00, 0.4000E+00,
     +  -20213,'a_1-        ',0.1230E+01,-1.00, 0.0000E+00, 0.4000E+00,
     +   20223,'f_10        ',0.1282E+01, 0.00, 0.2743E-22, 0.2400E-01,
     +   20313,'K_1(1400)0  ',0.1402E+01, 0.00, 0.3783E-23, 0.1740E+00,
     +  -20313,'K_1(1400)0# ',0.1402E+01, 0.00, 0.3783E-23, 0.1740E+00,
     +   20323,'K_1(1400)+  ',0.1402E+01, 1.00, 0.3783E-23, 0.1740E+00,
     +  -20323,'K_1(1400)-  ',0.1402E+01,-1.00, 0.3783E-23, 0.1740E+00,
     +   20333,'f''_10       ',0.1427E+01, 0.00, 0.1266E-22, 0.5200E-01,
     +   20413,'D*_1+       ',0.2372E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +  -20413,'D*_1-       ',0.2372E+01,-1.00, 0.0000E+00, 0.0000E+00,
     +   20423,'D*_10       ',0.2372E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +  -20423,'D*_10#      ',0.2372E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   20433,'D*_1s+      ',0.2560E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +  -20433,'D*_1s-      ',0.2560E+01,-1.00, 0.0000E+00, 0.0000E+00,
     +  100443,'psi(2S)0    ',0.3686E+01, 0.00, 0.2376E-20, 0.2770E-03,
     +   20513,'B*_10       ',0.5780E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +  -20513,'B*_10#      ',0.5780E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   20523,'B*_1+       ',0.5780E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +  -20523,'B*_1-       ',0.5780E+01,-1.00, 0.0000E+00, 0.0000E+00/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=324,342)/
     +   20533,'B*_1s0      ',0.6020E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +  -20533,'B*_1s0#     ',0.6020E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +  100553,'Upsilon(2S)0',0.1002E+02, 0.00, 0.1496E-19, 0.4400E-04,
     +   20663,'chi_1t0     ',0.3480E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +   20773,'chi_1l0     ',0.2385E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +   20883,'chi_1h0     ',0.3975E+03, 0.00, 0.0000E+00, 0.0000E+00,
     +  100555,'chi_2b(2P)0 ',0.1027E+02, 0.00, 0.0000E+00, 0.0000E+00,
     +   30443,'psi(3770)0  ',0.3770E+01, 0.00, 0.2789E-22, 0.2360E-01,
     +  200553,'Upsilon(3S)0',0.1036E+02, 0.00, 0.2503E-19, 0.2630E-04,
     + 9000443,'psi(4040)0  ',0.4040E+01, 0.00, 0.1266E-22, 0.5200E-01,
     +  300553,'Upsilon(4S)0',0.1058E+02, 0.00, 0.6582E-22, 0.1000E-01,
     + 9010443,'psi(4160)0  ',0.4159E+01, 0.00, 0.8439E-23, 0.7800E-01,
     + 9000553,'Ups(10860)0 ',0.1086E+02, 0.00, 0.5984E-23, 0.1100E+00,
     + 9020443,'Psi(4415)0  ',0.4415E+01, 0.00, 0.1531E-22, 0.4300E-01,
     + 9010553,'Ups(11020)0 ',0.1102E+02, 0.00, 0.8332E-23, 0.7900E-01,
     +  120553,'chi_1b(2P)0 ',0.1026E+02, 0.00, 0.0000E+00, 0.0000E+00,
     +      28,'reggeon     ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      29,'pomeron     ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +     110,'rho_diffr0  ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=343,361)/
     +     220,'omega_diffr0',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +     330,'phi_diffr0  ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +     440,'J/psi_diffr0',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +     550,'Upsilon_dif0',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +     660,'Theta_diffr0',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +    1103,'dd_1        ',0.7713E+00,-0.67, 0.0000E+00, 0.0000E+00,
     +   -1103,'dd_1#       ',0.7713E+00, 0.67, 0.0000E+00, 0.0000E+00,
     +    2101,'ud_0        ',0.5793E+00, 0.33, 0.0000E+00, 0.0000E+00,
     +   -2101,'ud_0#       ',0.5793E+00,-0.33, 0.0000E+00, 0.0000E+00,
     +    2103,'ud_1        ',0.7713E+00, 0.33, 0.0000E+00, 0.0000E+00,
     +   -2103,'ud_1#       ',0.7713E+00,-0.33, 0.0000E+00, 0.0000E+00,
     +    2203,'uu_1        ',0.7713E+00, 1.33, 0.0000E+00, 0.0000E+00,
     +   -2203,'uu_1#       ',0.7713E+00,-1.33, 0.0000E+00, 0.0000E+00,
     +    3101,'sd_0        ',0.8047E+00,-0.67, 0.0000E+00, 0.0000E+00,
     +   -3101,'sd_0#       ',0.8047E+00, 0.67, 0.0000E+00, 0.0000E+00,
     +    3103,'sd_1        ',0.9295E+00,-0.67, 0.0000E+00, 0.0000E+00,
     +   -3103,'sd_1#       ',0.9295E+00, 0.67, 0.0000E+00, 0.0000E+00,
     +    3201,'su_0        ',0.8047E+00, 0.33, 0.0000E+00, 0.0000E+00,
     +   -3201,'su_0#       ',0.8047E+00,-0.33, 0.0000E+00, 0.0000E+00/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=362,380)/
     +    3203,'su_1        ',0.9295E+00, 0.33, 0.0000E+00, 0.0000E+00,
     +   -3203,'su_1#       ',0.9295E+00,-0.33, 0.0000E+00, 0.0000E+00,
     +    3303,'ss_1        ',0.9295E+00, 0.33, 0.0000E+00, 0.0000E+00,
     +   -3303,'ss_1#       ',0.9295E+00,-0.33, 0.0000E+00, 0.0000E+00,
     +       9,'g           ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      38,'eta_tech0   ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      39,'LQ          ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      84,'c-hadron    ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      85,'b-hadron    ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      86,'t-hadron    ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      87,'l-hadron    ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      88,'h-hadron    ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +      90,'diquark     ',0.0000E+00, 0.00, 0.0000E+00, 0.0000E+00,
     +     541,'B_c+        ',0.6590E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +    -541,'B_c-        ',0.6590E+01,-1.00, 0.0000E+00, 0.0000E+00,
     +     543,'B*_c+       ',0.6600E+01, 1.00, 0.0000E+00, 0.0000E+00,
     +    -543,'B*_c-       ',0.6600E+01,-1.00, 0.0000E+00, 0.0000E+00,
     +  100313,'K*(1410)0   ',0.1414E+01, 0.00, 0.2837E-23, 0.2320E+00,
     + -100313,'K*(1410)0#  ',0.1414E+01, 0.00, 0.2837E-23, 0.2320E+00/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=381,399)/
     +  100323,'K*(1410)+   ',0.1414E+01, 1.00, 0.2837E-23, 0.2320E+00,
     + -100323,'K*(1410)-   ',0.1414E+01,-1.00, 0.2837E-23, 0.2320E+00,
     +   30313,'K*(1680)0   ',0.1717E+01, 0.00, 0.2057E-23, 0.3200E+00,
     +  -30313,'K*(1680)0#  ',0.1717E+01, 0.00, 0.2057E-23, 0.3200E+00,
     +   30323,'K*(1680)+   ',0.1717E+01, 1.00, 0.2057E-23, 0.3200E+00,
     +  -30323,'K*(1680)-   ',0.1717E+01,-1.00, 0.2057E-23, 0.3200E+00,
     +   12112,'N(1440)0    ',0.1440E+01, 0.00, 0.1881E-23, 0.3500E+00,
     +  -12112,'N(1440)#    ',0.1440E+01, 0.00, 0.1881E-23, 0.3500E+00,
     +   12212,'N(1440)+    ',0.1440E+01, 1.00, 0.1881E-23, 0.3500E+00,
     +  -12212,'N(1440)-#   ',0.1440E+01,-1.00, 0.1881E-23, 0.3500E+00,
     +    1214,'N(1520)0    ',0.1520E+01, 0.00, 0.5485E-23, 0.1200E+00,
     +   -1214,'N(1520)0#   ',0.1520E+01, 0.00, 0.5485E-23, 0.1200E+00,
     +    2124,'N(1520)+    ',0.1520E+01, 1.00, 0.5485E-23, 0.1200E+00,
     +   -2124,'N(1520)-#   ',0.1520E+01,-1.00, 0.5485E-23, 0.1200E+00,
     +   22112,'N(1535)0    ',0.1535E+01, 0.00, 0.4388E-23, 0.1500E+00,
     +  -22112,'N(1535)0#   ',0.1535E+01, 0.00, 0.4388E-23, 0.1500E+00,
     +   22212,'N(1535)+    ',0.1535E+01, 1.00, 0.4388E-23, 0.1500E+00,
     +  -22212,'N(1535)-#   ',0.1535E+01,-1.00, 0.4388E-23, 0.1500E+00,
     +   32112,'N(1650)0    ',0.1650E+01, 0.00, 0.4388E-23, 0.1500E+00/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=400,418)/
     +  -32112,'N(1650)0#   ',0.1650E+01, 0.00, 0.4388E-23, 0.1500E+00,
     +   32212,'N(1650)+    ',0.1650E+01, 1.00, 0.4388E-23, 0.1500E+00,
     +  -32212,'N(1650)-#   ',0.1650E+01,-1.00, 0.4388E-23, 0.1500E+00,
     +    2116,'N(1675)0    ',0.1675E+01, 0.00, 0.4388E-23, 0.1500E+00,
     +   -2116,'N(1675)0#   ',0.1675E+01, 0.00, 0.4388E-23, 0.1500E+00,
     +    2216,'N(1675)+    ',0.1675E+01, 1.00, 0.4388E-23, 0.1500E+00,
     +   -2216,'N(1675)-#   ',0.1675E+01,-1.00, 0.4388E-23, 0.1500E+00,
     +   12116,'N(1680)0    ',0.1680E+01, 0.00, 0.5063E-23, 0.1300E+00,
     +  -12116,'N(1680)0#   ',0.1680E+01, 0.00, 0.5063E-23, 0.1300E+00,
     +   12216,'N(1680)+    ',0.1680E+01, 1.00, 0.5063E-23, 0.1300E+00,
     +  -12216,'N(1680)-#   ',0.1680E+01,-1.00, 0.5063E-23, 0.1300E+00,
     +   21214,'N(1700)0    ',0.1700E+01, 0.00, 0.6582E-23, 0.1000E+00,
     +  -21214,'N(1700)0#   ',0.1700E+01, 0.00, 0.6582E-23, 0.1000E+00,
     +   22124,'N(1700)+    ',0.1700E+01, 1.00, 0.6582E-23, 0.1000E+00,
     +  -22124,'N(1700)-#   ',0.1700E+01,-1.00, 0.6582E-23, 0.1000E+00,
     +   42112,'N(1710)0    ',0.1710E+01, 0.00, 0.6582E-23, 0.1000E+00,
     +  -42112,'N(1710)0#   ',0.1710E+01, 0.00, 0.6582E-23, 0.1000E+00,
     +   42212,'N(1710)+    ',0.1710E+01, 1.00, 0.6582E-23, 0.1000E+00,
     +  -42212,'N(1710)-#   ',0.1710E+01,-1.00, 0.6582E-23, 0.1000E+00/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=419,437)/
     +   31214,'N(1720)0    ',0.1720E+01, 0.00, 0.4388E-23, 0.1500E+00,
     +  -31214,'N(1720)0#   ',0.1720E+01, 0.00, 0.4388E-23, 0.1500E+00,
     +   32124,'N(1720)+    ',0.1720E+01, 1.00, 0.4388E-23, 0.1500E+00,
     +  -32124,'N(1720)-#   ',0.1720E+01,-1.00, 0.4388E-23, 0.1500E+00,
     +   31114,'Del(1600)-  ',0.1600E+01,-1.00, 0.1881E-23, 0.3500E+00,
     +  -31114,'Del(1600)+# ',0.1600E+01, 1.00, 0.1881E-23, 0.3500E+00,
     +   32114,'Del(1600)0  ',0.1600E+01, 0.00, 0.1881E-23, 0.3500E+00,
     +  -32114,'Del(1600)0# ',0.1600E+01, 0.00, 0.1881E-23, 0.3500E+00,
     +   32214,'Del(1600)+  ',0.1600E+01, 1.00, 0.1881E-23, 0.3500E+00,
     +  -32214,'Del(1600)-# ',0.1600E+01,-1.00, 0.1881E-23, 0.3500E+00,
     +   32224,'Del(1600)++ ',0.1600E+01, 2.00, 0.1881E-23, 0.3500E+00,
     +  -32224,'Del(1600)--#',0.1600E+01,-2.00, 0.1881E-23, 0.3500E+00,
     +    1112,'Del(1620)-  ',0.1620E+01,-1.00, 0.4388E-23, 0.1500E+00,
     +   -1112,'Del(1620)+# ',0.1620E+01, 1.00, 0.4388E-23, 0.1500E+00,
     +    1212,'Del(1620)0  ',0.1620E+01, 0.00, 0.4388E-23, 0.1500E+00,
     +   -1212,'Del(1620)0# ',0.1620E+01, 0.00, 0.4388E-23, 0.1500E+00,
     +    2122,'Del(1620)+  ',0.1620E+01, 1.00, 0.4388E-23, 0.1500E+00,
     +   -2122,'Del(1620)-# ',0.1620E+01,-1.00, 0.4388E-23, 0.1500E+00,
     +    2222,'Del(1620)++ ',0.1620E+01, 2.00, 0.4388E-23, 0.1500E+00/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=438,456)/
     +   -2222,'Del(1620)--#',0.1620E+01,-2.00, 0.4388E-23, 0.1500E+00,
     +   11114,'Del(1700)-  ',0.1700E+01,-1.00, 0.2194E-23, 0.3000E+00,
     +  -11114,'Del(1700)+# ',0.1700E+01, 1.00, 0.2194E-23, 0.3000E+00,
     +   12114,'Del(1700)0  ',0.1700E+01, 0.00, 0.2194E-23, 0.3000E+00,
     +  -12114,'Del(1700)0# ',0.1700E+01, 0.00, 0.2194E-23, 0.3000E+00,
     +   12214,'Del(1700)+  ',0.1700E+01, 1.00, 0.2194E-23, 0.3000E+00,
     +  -12214,'Del(1700)-# ',0.1700E+01,-1.00, 0.2194E-23, 0.3000E+00,
     +   12224,'Del(1700)++ ',0.1700E+01, 2.00, 0.2194E-23, 0.3000E+00,
     +  -12224,'Del(1700)--#',0.1700E+01,-2.00, 0.2194E-23, 0.3000E+00,
     +   20333,'f_1(1420)0  ',0.1426E+01, 0.00, 0.1197E-22, 0.5500E-01,
     +   40223,'f_1(1510)0  ',0.1512E+01, 0.00, 0.1881E-22, 0.3500E-01,
* Glueball masses from G.S.BALI et al. (1993): Phys. Lett. B309:378-384.
* Values in parantheses indicate PC parities
     +     991,'Glueb_0(++)0',0.1550E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +     995,'Glueb_2(++)0',0.2270E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   10991,'Glueb_0(-+)0',0.2330E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +     993,'Glueb_1(+-)0',0.2900E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   10995,'Glueb_2(-+)0',0.3010E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   20995,'Glueb_2(+-)0',0.3390E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +     997,'Glueb_3(++)0',0.3920E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   30995,'Glueb_2(--)0',0.3940E+01, 0.00, 0.0000E+00, 0.0000E+00/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=457,475)/
     +   10993,'Glueb_1(++)0',0.3960E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   20993,'Glueb_1(--)0',0.4360E+01, 0.00, 0.0000E+00, 0.0000E+00,
     +   40995,'Glueb_2(+-)0',0.4400E+01, 0.00, 0.0000E+00, 0.0000E+00,
* Additional light, unflavored mesons
     +  100221,'eta(1295)0  ',0.1297E+01, 0.00, 0.1242E-22, 0.5300E-01,
     +   30221,'f_0(1300)0  ',0.1300E+01, 0.00, 0.2200E-23, 0.3000E+00,
     +  100111,'pi(1300)0   ',0.1300E+01, 0.00, 0.0000E+00, 0.4000E+00,
     +  100211,'pi(1300)+   ',0.1300E+01, 1.00, 0.0000E+00, 0.4000E+00,
     + -100211,'pi(1300)-   ',0.1300E+01,-1.00, 0.0000E+00, 0.4000E+00,
     +  100223,'omega(1420)0',0.1419E+01, 0.00, 0.3872E-23, 0.1700E+00,
     +   40221,'eta(1440)0  ',0.1420E+01, 0.00, 0.1100E-22, 0.6000E-01,
     +  100113,'rho(1450)0  ',0.1465E+01, 0.00, 0.2123E-23, 0.3100E+00,
     +  100213,'rho(1450)+  ',0.1465E+01, 1.00, 0.2123E-23, 0.3100E+00,
     + -100213,'rho(1450)-  ',0.1465E+01,-1.00, 0.2123E-23, 0.3100E+00,
     + 9020221,'f_0(1590)0  ',0.1500E+01, 0.00, 0.5877E-23, 0.1120E+00,
     +   30223,'omega(1600)0',0.1649E+01, 0.00, 0.2992E-23, 0.2200E+00,
     +     227,'ome_3(1670)0',0.1667E+01, 0.00, 0.3918E-23, 0.1680E+00,
     +   10115,'pi_2(1670)0 ',0.1670E+01, 0.00, 0.2551E-23, 0.2580E+00,
     +   10215,'pi_2(1670)+ ',0.1670E+01, 1.00, 0.2551E-23, 0.2580E+00,
     +  -10215,'pi_2(1670)- ',0.1670E+01,-1.00, 0.2551E-23, 0.2580E+00/
      DATA (IP(J),NA(J),AM(J),CH(J),TL(J),WI(J),J=476,NCOMAX),DUMMY/
     +     117,'rho_3(1690)0',0.1691E+01, 0.00, 0.4114E-23, 0.1600E+00,
     +     217,'rho_3(1690)+',0.1691E+01, 1.00, 0.4114E-23, 0.1600E+00,
     +    -217,'rho_3(1690)-',0.1691E+01,-1.00, 0.4114E-23, 0.1600E+00,
     +   30113,'rho(1700)0  ',0.1700E+01, 0.00, 0.2743E-23, 0.2400E+00,
     +   30213,'rho(1700)+  ',0.1700E+01, 1.00, 0.2743E-23, 0.2400E+00,
     +  -30213,'rho(1700)-  ',0.1700E+01,-1.00, 0.2743E-23, 0.2400E+00,
     +     337,'phi_3(1850)0',0.1854E+01, 0.00, 0.7566E-23, 0.8700E-01,
     +  100335,'f_2(2010)0  ',0.2010E+01, 0.00, 0.3291E-23, 0.2000E+00,
     +     229,'f_4(2050)0  ',0.2044E+01, 0.00, 0.3164E-23, 0.2080E+00,
     + 9050225,'f_2(2300)0  ',0.2297E+01, 0.00, 0.4388E-23, 0.1500E+00,
     + 9060225,'f_2(2340)0  ',0.2340E+01, 0.00, 0.2057E-23, 0.3200E+00,
     +     497,'Helium3++   ',0.2809E+01, 2.00, 0.1000E+17, 0.0000E+00,
     +     498,'Cerenkov0   ',0.0000E+00, 0.00, 0.1000E+17, 0.0000E+00,
     +0./

      ENTRY UMASS(IPDG)
      ASSIGN 100 TO LABEL
      GOTO 900

      ENTRY PCHRG(IPDG)
      ENTRY UCHARG(IPDG)
      ASSIGN 110 TO LABEL
      GOTO 900

      ENTRY PTLIF(IPDG)
      ASSIGN 120 TO LABEL
      GOTO 900

      ENTRY PWIDTH(IPDG)
      ASSIGN 125 TO LABEL
      GOTO 900

      ENTRY JPNAME(IPDG,NAMOUT)
      ASSIGN 130 TO LABEL
      GOTO 900

      ENTRY JPCPDG(IPDG)
      ASSIGN 140 TO LABEL
      GOTO 900

900   CONTINUE
      IF(FIRST1)THEN
        FIRST1=.FALSE.
*       define tables using particle code as input
        CALL DTLU(NCOMAX,NCOMAX,IP,AUX)
        NPRIM=AUX(2)
      ENDIF

      KTLU=NCOMAX+MOD(IABS(IPDG),NPRIM)+1
 10   KTLU=AUX(KTLU+5)
      IF(KTLU.NE.0) THEN
        IF(IPDG.NE.IP(KTLU)) GOTO 10
      END IF

      GOTO LABEL

100   IF(KTLU.EQ.0)THEN
        PMASS=0.
      ELSE
        PMASS=AM(KTLU)
      ENDIF
      RETURN

110   IF(KTLU.EQ.0)THEN
        PCHRG=0.
      ELSE
        PCHRG=CH(KTLU)
      ENDIF
      RETURN

120   IF(KTLU.EQ.0)THEN
        PTLIF=0.
      ELSE
        PTLIF=TL(KTLU)
      ENDIF
      RETURN

125   IF(KTLU.EQ.0)THEN
        PWIDTH=0.
      ELSE
        PWIDTH=WI(KTLU)
      ENDIF
      RETURN

130   IF(KTLU.EQ.0)THEN
        JPNAME=-1
        NAMOUT='UNDEFINED'
      ELSE
        JPNAME=0
        NAMOUT=NA(KTLU)
      ENDIF
      RETURN

140   JPCPDG=KTLU
      RETURN

      ENTRY PMASSN(PANAME)
      ASSIGN 200 TO LABEL
      GOTO 950

      ENTRY PCHRGN(PANAME)
      ASSIGN 210 TO LABEL
      GOTO 950

      ENTRY PTLIFN(PANAME)
      ASSIGN 220 TO LABEL
      GOTO 950

      ENTRY PWIDTN(PANAME)
      ASSIGN 225 TO LABEL
      GOTO 950

      ENTRY JPCODE(PANAME)
      ASSIGN 230 TO LABEL
      GOTO 950

      ENTRY JPCNAM(PANAME)
      ASSIGN 240 TO LABEL
      GOTO 950

950   CONTINUE
      IF(FIRST2)THEN
        FIRST2=.FALSE.
*       define tables using particle name as input
        CALL DTLUC(NCOMAX,NCOMAX,NA,AUX2)
        NPRIM=AUX2(2)
      ENDIF

      ILEN=LEN(PANAME)
      IF(ILEN.EQ.1)THEN
        INAME=ICHAR(PANAME(1:1))
      ELSE IF (ILEN.EQ.2)THEN
        INAME=ICHAR(PANAME(1:1))+ICHAR(PANAME(2:2))
      ELSE IF (ILEN.EQ.3)THEN
        INAME=ICHAR(PANAME(1:1))+ICHAR(PANAME(2:2))+ICHAR(PANAME(3:3))
      ELSE
        INAME=ICHAR(PANAME(1:1))+ICHAR(PANAME(2:2))+ICHAR(PANAME(3:3))
     +        +ICHAR(PANAME(4:4))
      ENDIF
      KTLU=NCOMAX+MOD(INAME,NPRIM)+1
 20   KTLU=AUX2(KTLU+5)
      IF(KTLU.NE.0) THEN
        IF(PANAME.NE.NA(KTLU)(1:ILEN))GOTO 20
      END IF

      GOTO LABEL

200   IF(KTLU.EQ.0)THEN
        PMASSN=0.
      ELSE
        PMASSN=AM(KTLU)
      ENDIF
      RETURN

210   IF(KTLU.EQ.0)THEN
        PCHRGN=0.
      ELSE
        PCHRGN=CH(KTLU)
      ENDIF
      RETURN

220   IF(KTLU.EQ.0)THEN
        PTLIFN=0.
      ELSE
        PTLIFN=TL(KTLU)
      ENDIF
      RETURN

225   IF(KTLU.EQ.0)THEN
        PWIDTN=0.
      ELSE
        PWIDTN=WI(KTLU)
      ENDIF
      RETURN

230   IF(KTLU.EQ.0)THEN
        JPCODE=0
      ELSE
        JPCODE=IP(KTLU)
      ENDIF
      RETURN

240   JPCNAM=KTLU
      RETURN

      ENTRY PMASSC(ICOMPR)
      PMASSC=AM(ICOMPR)
      RETURN

      ENTRY PCHRGC(ICOMPR)
      PCHRGC=CH(ICOMPR)
      RETURN

      ENTRY PTLIFC(ICOMPR)
      PTLIFC=TL(ICOMPR)
      RETURN

      ENTRY PWIDTC(ICOMPR)
      PWIDTC=WI(ICOMPR)
      RETURN

      END



*CMZ :  2.00/00 10/02/91  09.24.56  by  Stephan Egli
*CMZ :  1.04/00 29/04/90  15.24.29  by  Stephan Egli
*-- Author :
      SUBROUTINE DTLU(NDIM,NEN,TAB,AUX)
*
*     TLU - package for fast table look-up (look-up time does not
*           depend on the table length)
*
*     Assume a table TAB(NDIM) (of type integer), which contains
*     NEN items in TAB(1)...TAB(NEN). The table look-up to check
*     wether the word ITEM is in the table, can be done with a
*     Do-loop like:
*
*           DO 10 I=1,NEN
*           IF(TAB(I).EQ.ITEM) GOTO 20
*        10 CONTINUE
*           I=0
*        20 CONTINUE
*     *     I=0 returned, if ITEM not yet table TAB
*
*     The time required for one table look-up is apparently
*     proportinal to NEN. On the DESY IBM the time for one table look-up
*     in case of random numbers is approximately
*           0.16 * NEN mikro seconds (if the item is found) and twice
*     that number, if the item is not found. There will be an extra
*     time of about 4 mikro seconds, if the loop is done in a function
*     (due to the call/return overhead).
*     For example if there is a table with NEN=1000 entries, the time
*     for one table look-up is about 160 or 320 micro seconds, depending
*     on wether the entry is found (on average after NEN/2 entries) or
*     not found.
*     Since in many applications the number of times a table look-up is
*     done is approximately proportional to the number of entries NEN,
*     the total time spent for table look-up will be proportional to
*     the square of NEN.
*
*     There are of course faster methods. For the binary search the
*     time for one table look-up is approximately proportional to
*     the logarithm of NEN, the number of entries. The disadvantage
*     with this algorithm is, that the table entries have to be ordered.
*     Thus some sorting is necessary for each update of the table.
*
*     The subprograms of this package use the 'hash'-technique.
*     Advantages of this method are:
*     (1) time for one table look-up is constant (no dependence on the
*         length of the table) and about 7 micro seconds for a
*         function including the call/return time
*     (2) the entries of the table can be in any order (no sorting
*         necessary)
*     (3) the code for a table look-up is short (5 statements) and
*         can be included inline in the user program, thus avoiding
*         the call/return time and reducing the time for one table
*         look-up to 3 micro seconds (for any number of entries)
*     (4) the time for one table look-up is the same, wether the entry
*         is found or not.
*
*     There is one disadvantage: an auxiliary array of length 2*NDIM
*     is necessary for a table of length NDIM (maximun of NDIM entries).
*
*     Subprograms: Subroutine DTLU
*                  Functions  ITLU and JTLU
*
*
*     Two arrays are used, TAB(NDIM) and AUX(2*NDIM), both assumed of
*     type integer. The array TAB(NDIM) is the table with a maximum
*     of NDIM entries. The array AUX is an auxiliary array of length
*     2*NDIM. NDIM has to be at least 10 (otherwise the program will
*     stop).
*     The auxilary array AUX is used internally and it has to be
*     initialized by a call of DTLU before any other operation.
*
*     CALL DTLU(NDIM,NEN,TAB,AUX)
*
*               NDIM = dimension parameter of array TAB
*               NEN  = number of entries already stored in table
*               TAB  = table of entries [TAB(NDIM)]
*               AUX  = auxiliary array of at least 2*NDIM words
*
*     The auxiliary array AUX is initialized. IF NEN not equal to zero,
*     the array is prepared for these entries. DTU has to be called,
*     if the table TAB has been modified by the user. The time for
*     initialization is about 3 mikro seconds for each entry in the
*     table [total (10 + 3 * NEN) micro seconds].
*
*
*     J = JTLU(ITEM,TAB,AUX)
*
*               ITEM = item to be searched for in the table
*               TAB  = table of entries
*               AUX  = auxiliary array
*
*     The returned value is the index J with ITEM = TAB(J). If the
*     entry was not found, it is added to the table and the correspon-
*     ding index is returned. J = 0 is returned, if there is not enough
*     space in the table (if NDIM =NEN).
*
*     The content of AUX may be checked at any time.
*     AUX(1) contains NDIM, and AUX(3) contains NEN. Thus if
*     AUX(1)=AUX(3), then there is no more space to store an
*     additional entry.
*
*
*     J = ITLU(ITEM,TAB,AUX)
*
*               ITEM = item to be searched for in the table
*               TAB  = table of entries
*               AUX  = auxiliary array
*
*     The returned value is the index J with ITEM = TAB(J), if the
*     entry was found, and J = 0, if no entry ITEM is found in the
*     table.
*
*     Instead of calling this function, the user may insert the
*     following five statements into his program:
*
*           KTLU=AUX(1)+MOD(IABS(ITEM),AUX(2))+1
*      1111 KTLU=AUX(KTLU+5)
*           IF(KTLU.NE.0) THEN
*              IF(ITEM.NE.TAB(KTLU)) GOTO 1111
*           END IF
*     and
*           J=KTLU
*
*     The result is identical, and the time is reduced to about
*     3 micro seconds. If the item should be added to the list, if it
*     is not already in, the user may add the statements:
*           ELSE
*              KTLU=JTLU(ITEM,TAB,AUX)
*     before the END IF statement
*
*     There is another package for the case of a table with two words
*     per entry [TAB(2,NDIM)], called DTLU2.
*
*
*     Author: V. Blobel Jan 88
*
      INTEGER TAB(NDIM),AUX(2*NDIM)
*     NDIM at least 10, otherwise stop
      IF(NDIM.LT.10) STOP
*     Clear aux array ...
      DO 10 I=1,2*NDIM
   10 AUX(I)=0
*     ... and define first three words
      AUX(1)=NDIM
      AUX(2)=0
C     AUX(3)=NEN
*     determine prime number for hash function
      NPRIM=NDIM-3
      IF(MOD(NPRIM,2).EQ.0) NPRIM=NPRIM-1
   20 NPRIM=NPRIM-2
      IF(NPRIM.GT.5) THEN
         DO 30 I=3,INT(SQRT(FLOAT(NPRIM))),2
         J=NPRIM/I
         IF(I*J.EQ.NPRIM) GOTO 20
   30    CONTINUE
      END IF
      AUX(2)=NPRIM
*     Loop to insert index structure in AUX for the NEN existing
*     entries in the table
      DO 50 K=1,MIN(NEN,NDIM)
      ITEM=TAB(K)
*     search and add (like function JTLU)
      J=AUX(1)+MOD(IABS(ITEM),AUX(2))+1
   40 I=J
      J=AUX(I+5)
      IF(J.NE.0) THEN
         IF(ITEM.NE.TAB(J)) GOTO 40
         AUX(3)=AUX(3)+1
      ELSE
         J=AUX(3)+1
         AUX(3)=J
         AUX(I+5)=J
      END IF
   50 CONTINUE
  100 RETURN
      END



*CMZU:  2.05/06 09/10/91  11.15.25  by  Stephan Egli
*-- Author :    Stephan Egli   09/10/91
      SUBROUTINE DTLUC(NDIM,NEN,TAB,AUX)
*
*     For description see DTLU2
*
*     original Author: V. Blobel Jan 88
*
      CHARACTER*(*)TAB(NDIM)
      INTEGER AUX(2*NDIM)
*     NDIM at least 10,  otherwise stop
      IF(NDIM.LT.10) STOP
*     Clear aux array ...
      DO 10 I=1,2*NDIM
   10 AUX(I)=0
*     ... and define first three words
      AUX(1)=NDIM
      AUX(2)=0
C     AUX(3)=NEN
*     determine prime number for hash function
      NPRIM=NDIM-3
      IF(MOD(NPRIM,2).EQ.0) NPRIM=NPRIM-1
   20 NPRIM=NPRIM-2
      IF(NPRIM.GT.5) THEN
         DO 30 I=3,INT(SQRT(FLOAT(NPRIM))),2
         J=NPRIM/I
         IF(I*J.EQ.NPRIM) GOTO 20
   30    CONTINUE
      END IF
      AUX(2)=NPRIM
*     Loop to insert index structure in AUX for the NEN existing
*     entries in the table
      DO 50 K=1,MIN(NEN,NDIM)
      ILEN=INDEX(TAB(K),' ')-1
      IF(ILEN.EQ.-1)ILEN=LEN(TAB(K))
      IF(ILEN.EQ.1)THEN
        INAME=ICHAR(TAB(K)(1:1))
      ELSE IF (ILEN.EQ.2)THEN
        INAME=ICHAR(TAB(K)(1:1))+ICHAR(TAB(K)(2:2))
      ELSE IF (ILEN.EQ.3)THEN
        INAME=ICHAR(TAB(K)(1:1))+ICHAR(TAB(K)(2:2))+ICHAR(TAB(K)(3:3))
      ELSE
        INAME=ICHAR(TAB(K)(1:1))+ICHAR(TAB(K)(2:2))+ICHAR(TAB(K)(3:3))
     +        +ICHAR(TAB(K)(4:4))
      ENDIF
*     search and add (like function JTLU)
      J=AUX(1)+MOD(INAME,AUX(2))+1
   40 I=J
      J=AUX(I+5)
      IF(J.NE.0) THEN
         IF(TAB(K).NE.TAB(J)) GOTO 40
         AUX(3)=AUX(3)+1
      ELSE
         J=AUX(3)+1
         AUX(3)=J
         AUX(I+5)=J
      END IF
   50 CONTINUE
  100 RETURN
      END
