      PROGRAM MAIN
      IMPLICIT NONE

C--- DECLARE FIT FUNCTION
      EXTERNAL FCN

C--- DECLARE PARAMETER-, STEP-, STARTVALUE-ARRAYS
      INTEGER NPAR
      PARAMETER(NPAR=2)
      DOUBLE PRECISION VSTART(NPAR),VSTEP(NPAR)
      CHARACTER*10 VNAM(2)
      DATA VNAM/'X-SHIFT   ','Y-SHIFT   '/
      DATA VSTART/2*0D0/
      DATA VSTEP/2*0.05/

C--- DECLARE ARGUMENT-ARRAY FOR CALL TO MNEXCM
      DOUBLE PRECISION ARGLIS(10)

C--- OTHER VARIABLES
      INTEGER I,IERR

C--- DECLARE OUTPUT VARIABLES
      INTEGER NPT, NFOUND, i1, i2
      PARAMETER(NPT=100)
      DOUBLE PRECISION XPT(NPT), YPT(NPT)
      
C--- INITIALIZE MINUIT UNITS
      CALL MNINIT(5,6,7)

C--- SPECIFY TITLE
      CALL MNSETI('SPACAL SHIFT')

C--- DEFINE PARAMETERS FOR  MINUIT
      DO I=1,NPAR
         CALL MNPARM(I,VNAM(I),VSTART(I),VSTEP(I),0.D0,0.D0,IERR)
         IF(IERR.NE.0) STOP 'MNPARM FAILED'
      ENDDO

C--- SET NOGRADIENT FOR MINUIT
      CALL MNEXCM(FCN,'SET NOG',ARGLIS,0,IERR,0)
      IF(IERR.NE.0) STOP 'MAIN: SET NOG FAILED'

C--- CALL FCN WITH IFLAG 1 TO INITIALIZE
      ARGLIS(1)=1D0
      CALL MNEXCM(FCN,'CALL',ARGLIS,1,IERR,0)
      IF(IERR.NE.0) STOP 'MAIN: CALL TO FCN WITH IFLAG=1 FAILED'
      
C--- CALL MIGRAD
      CALL MNEXCM(FCN,'MIG',ARGLIS,0,IERR,0)
      IF(IERR.NE.0) STOP 'MAIN: MIGRAD FAILED'

C--- CALL MNCONT
Crs      CALL MNCONT(FCN,1,2,NPT,XPT,YPT,NFOUND,0)
Crs      print*,'number of points on contour has to be ',NPT,NFOUND
C--- CALL CONtour
Crs      CALL MNEXCM(FCN,'CON',ARGLIS,0,IERR,0)
Crs      IF(IERR.NE.0) STOP 'MAIN: CONTOUR FAILED'
C--- THAT'S ALL
      END
*
* routine which will be minimised
*

      SUBROUTINE FCN(NPAR,GRAD,FVAL,XVAL,IFLAG,FUTIL)
      IMPLICIT NONE
C--- CONSTANTS
      DOUBLE PRECISION PI
      PARAMETER (PI=3.141592654D0)
C--- DECLERATION OF PARAMETERS
      INTEGER NPAR,IFLAG
      DOUBLE PRECISION GRAD(*), XVAL(*), FVAL, FUTIL
C---  EXPLANATION
C     XVAL(1) : SHIFT OF SPACAL IN X-DIRECTION
C     XVAL(2) : SHIFT OF SPACAL IN Y DIRECTION
      
C--- DECLARATION OF DATA ARRAYS
      INTEGER NDATA
      INTEGER NDMAX
      PARAMETER(NDMAX=28000)
      DOUBLE PRECISION X1(NDMAX),X2(NDMAX)
      DOUBLE PRECISION Y1(NDMAX),Y2(NDMAX)
C--- VARIABLES USED FOR SHIFTING
      DOUBLE PRECISION X1VC,X2VC
      DOUBLE PRECISION Y1VC,Y2VC
      DOUBLE PRECISION Z1VC(NDMAX),Z2VC(NDMAX)
C--- TRUE VARIABLES (including shifting)
      DOUBLE PRECISION X1TR,X2TR
      DOUBLE PRECISION Y1TR,Y2TR
C--- THETA vs x and y axis
      DOUBLE PRECISION STX1,STY1,STX2,STY2
      DOUBLE PRECISION SX(NDMAX),SY(NDMAX)
C--- VARIABLES USED FOR ERROR CALCULATION
      DOUBLE PRECISION SIGX1, SIGY1, SIGX2, SIGY2, SIGM2
      DOUBLE PRECISION ERRX, ERRY
      PARAMETER(ERRX=0.3,ERRY=0.3)
C--- OTHER VARIABLES
      INTEGER IOS,I
      DOUBLE PRECISION XX1,YY1,ZZ1,XX2,YY2,ZZ2,TTX,TTY 
      DOUBLE PRECISION PHI1, PHI2
C--- READ INPUT DATA
crs      print*,'ja 1'
      IF(IFLAG.EQ.1) THEN
crs         print*,'ja 2'
         OPEN(UNIT=20,FILE="minuit.dat",IOSTAT=IOS)
         IF(IOS.NE.0) STOP 'COULD NOT OPEN FILE="minuit.dat"'
crs            print*,'ja 3'
         NDATA=0
 10      READ(20,*,IOSTAT=IOS) XX1,YY1,ZZ1,XX2,YY2,ZZ2,TTX,TTY
crs         print*,'ja 4'
crs         print*,IOS
         IF(IOS.EQ.0) THEN
crs            print*,'ja 5'
            NDATA=NDATA+1
            X1(NDATA)   = XX1
            Y1(NDATA)   = YY1
            Z1VC(NDATA) = ZZ1
            X2(NDATA)   = XX2
            Y2(NDATA)   = YY2
            Z2VC(NDATA) = ZZ2
            SX(NDATA)   = TTX
            SY(NDATA)   = TTY
crs            print*,xx1
            GOTO 10
         ENDIF
         PRINT*,'FCN: ',NDATA,' DATA   POINTS READ'
      ENDIF
      
C--- CALCULATE VALUE TO MINIMIZE
C--- look in the log-book 8.10.97
      FVAL=0D0
      DO I=1,NDATA
C--- new coordinates
         X1VC = X1(I)
         Y1VC = Y1(I)
         X2VC = X2(I)
         Y2VC = Y2(I)
C--- calculate true x and y position
         X1TR = X1VC+XVAL(1)
         Y1TR = Y1VC+XVAL(2)
         X2TR = X2VC+XVAL(1) 
         Y2TR = Y2VC+XVAL(2)
*
         PHI1=ATAN2(Y1TR,X1TR)
         PHI2=ATAN2(Y2TR,X2TR)
C--- calc error
         sigx1 = (Y1TR*errx/(X1TR**2+Y1TR**2))
         sigy1 = (X1TR*erry/(X1TR**2+Y1TR**2))
         sigx2 = (Y1TR*errx/(X2TR**2+Y2TR**2))
C                 ^^^^ Y2TR1
C
         sigy2 = (X2TR*erry/(X2TR**2+Y2TR**2))
         sigm2 = sigx1**2+sigy1**2+sigx2**2+sigy2**2
C--- calc chi2
         FVAL=FVAL+((ABS(PHI1-PHI2)-PI)**2)/sigm2
      ENDDO
      RETURN
      END
